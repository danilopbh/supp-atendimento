trigger:
  branches:
    include:
      - main

variables:
  CONTAINER_REGISTRY: "suppregistry.azurecr.io"
  BACKEND_IMAGE: "atendimento/supp-backend-kubernetes"
  WEBSERVER_IMAGE: "atendimento/supp-webserver-kubernetes"
  RESOURCE_GROUP: "pdbl-vnet-prd-br-rg"

stages:
- stage: GetLatestTag
  displayName: "Obter Última Tag"
  jobs:
  - job: FetchTag
    steps:
    - script: |
        echo "Buscando última tag do backend..."
        LATEST_TAG_BACKEND=$(az acr repository show-tags --name suppregistry --repository atendimento/supp-backend-kubernetes --orderby time_desc --output tsv --top 1)
        echo "Última tag do backend: $LATEST_TAG_BACKEND"
        echo "##vso[task.setvariable variable=LATEST_TAG_BACKEND]$LATEST_TAG_BACKEND"

        echo "Buscando última tag do webserver..."
        LATEST_TAG_WEBSERVER=$(az acr repository show-tags --name suppregistry --repository atendimento/supp-webserver-kubernetes --orderby time_desc --output tsv --top 1)
        echo "Última tag do webserver: $LATEST_TAG_WEBSERVER"
        echo "##vso[task.setvariable variable=LATEST_TAG_WEBSERVER]$LATEST_TAG_WEBSERVER"
      displayName: "Definir variáveis com última tag"

- stage: Build
  displayName: "Construção das Imagens"
  dependsOn: GetLatestTag
  jobs:
  - job: BuildAndPush
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'Azure Container Registry'
        repository: $(BACKEND_IMAGE)
        command: 'buildAndPush'
        Dockerfile: 'backend/Dockerfile'
        tags: '$(LATEST_TAG_BACKEND)'

    - task: Docker@2
      inputs:
        containerRegistry: 'Azure Container Registry'
        repository: $(WEBSERVER_IMAGE)
        command: 'buildAndPush'
        Dockerfile: 'webserver/Dockerfile'
        tags: '$(LATEST_TAG_WEBSERVER)'

- stage: Deploy
  displayName: "Deploy no GitOps"
  dependsOn: Build
  jobs:
  - job: DeployToGitOps
    steps:
    - script: |
        echo "Atualizando imagens no repositório Git com tags $(LATEST_TAG_BACKEND) e $(LATEST_TAG_WEBSERVER)"
        git config --global user.email "devops@azure.com"
        git config --global user.name "Azure DevOps"
        git clone https://github.com/seu-usuario/supp-atendimento-kubernetes.git
        cd supp-atendimento-kubernetes
        sed -i 's|image: suppregistry.azurecr.io/atendimento/supp-backend-kubernetes:.*|image: suppregistry.azurecr.io/atendimento/supp-backend-kubernetes:$(LATEST_TAG_BACKEND)|' kubernetes/backend-deployment.yaml
        sed -i 's|image: suppregistry.azurecr.io/atendimento/supp-webserver-kubernetes:.*|image: suppregistry.azurecr.io/atendimento/supp-webserver-kubernetes:$(LATEST_TAG_WEBSERVER)|' kubernetes/webserver-deployment.yaml
        git add .
        git commit -m "Atualizando imagens para versão $(LATEST_TAG_BACKEND) e $(LATEST_TAG_WEBSERVER)"
        git push origin main
      displayName: "Atualizando arquivos no GitHub"
