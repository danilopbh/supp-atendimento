apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: supp-database
  labels:
    app: supp-database
spec:
  serviceName: "supp-database"
  replicas: 1  # Para PostgreSQL em produção, considere utilizar Azure Database for PostgreSQL
  selector:
    matchLabels:
      app: supp-database
  template:
    metadata:
      labels:
        app: supp-database
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
        resources:
          requests:
            cpu: "200m"
            memory: "512Mi"
          limits:
            cpu: "1000m"
            memory: "1Gi"
        env:
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: supp-secrets
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: supp-secrets
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: supp-secrets
              key: POSTGRES_PASSWORD
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        readinessProbe:
          exec:
            command: ["pg_isready", "-U", "suppadmin"]
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          exec:
            command: ["pg_isready", "-U", "suppadmin"]
          initialDelaySeconds: 30
          periodSeconds: 30
  volumeClaimTemplates:
  - metadata:
      name: postgres-data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: managed-premium  # Classe de armazenamento Azure
      resources:
        requests:
          storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: supp-database
spec:
  selector:
    app: supp-database
  ports:
  - port: 5432
    targetPort: 5432
  type: ClusterIP