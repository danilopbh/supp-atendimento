#version: '3.8'

services:
  backend:
    build:
      context: ./
      dockerfile: docker/backend.Dockerfile
    container_name: supp-backend
    volumes:
      - ./supp-atendimento-back-end:/var/www/html
      - backend-uploads:/var/www/html/public/uploads
    depends_on:
      - database
    environment:
      - APP_ENV=dev
      - DATABASE_URL=postgresql://suppadmin:supppass@database:5432/suppdb
    restart: unless-stopped
    networks:
      - supp-network
    healthcheck:
      test: ["CMD", "php", "-v"]
      interval: 30s
      timeout: 10s
      retries: 3

  webserver:
    image: nginx:alpine
    container_name: supp-webserver
    ports:
      - "8000:80"
    volumes:
      - ./supp-atendimento-back-end:/var/www/html
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf
      - backend-uploads:/var/www/html/public/uploads
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - supp-network

  frontend:
    build:
      context: ./
      dockerfile: docker/frontend.Dockerfile
    container_name: supp-frontend
    ports:
      - "5173:5173"
    user: "node"  # Usar o usu√°rio 'node' em vez de 'appuser'
    environment:
    - NODE_ENV=development
    - HOST=0.0.0.0
    volumes:
      - ./supp-atendimento-front-end:/app
    command: sh -c "npm install && npm run dev -- --host"
    restart: unless-stopped
    networks:
      - supp-network

  database:
    image: postgres:15-alpine
    container_name: supp-database
    environment:
      POSTGRES_DB: suppdb
      POSTGRES_USER: suppadmin
      POSTGRES_PASSWORD: supppass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - supp-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U suppadmin"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: supp-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@supp.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - database
    restart: unless-stopped
    networks:
      - supp-network
  
  mailhog:
    image: mailhog/mailhog
    container_name: supp-mailhog
    ports:
      - "1025:1025"  # SMTP port
      - "8025:8025"  # Web interface port
    restart: unless-stopped
    networks:
      - supp-network

networks:
  supp-network:
    driver: bridge

volumes:
  postgres_data:
  backend-uploads: